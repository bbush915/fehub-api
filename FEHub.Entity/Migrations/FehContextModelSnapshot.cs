// <auto-generated />
using System;
using FEHub.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FEHub.Entity.Migrations
{
    [DbContext(typeof(FehContext))]
    partial class FehContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.4.20220.10");

            modelBuilder.Entity("FEHub.Entity.Models.Accessory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessoryType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(250);

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("FEHub.Entity.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Company")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("NameKanji")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("FEHub.Entity.Models.Hero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AdditionDate")
                        .HasColumnType("date");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttackGrowthRate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BVID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseAttack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseDefense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseHitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseResistance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("DefenseGrowthRate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(250);

                    b.Property<int?>("Element")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPointsGrowthRate")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDuoHero")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLegendaryHero")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMythicHero")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsResplendentHero")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LegendaryHeroBoostType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("MovementType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MythicHeroBoostType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<int>("ResistanceGrowthRate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpeedGrowthRate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weapon")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("FEHub.Entity.Models.HeroSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DefaultRarity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SkillPosition")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnlockRarity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.HasIndex("SkillId");

                    b.ToTable("HeroSkills");
                });

            modelBuilder.Entity("FEHub.Entity.Models.HeroVoiceActor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Language")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VoiceActorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.HasIndex("VoiceActorId");

                    b.ToTable("HeroVoiceActors");
                });

            modelBuilder.Entity("FEHub.Entity.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(250);

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("FEHub.Entity.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("AttackModifier")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cooldown")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int?>("DefenseModifier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int?>("HitPointsModifier")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailableAsSacredSeal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsExclusive")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Might")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int?>("Range")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ResistanceModifier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpeedModifier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WeaponRefineType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("FEHub.Entity.Models.SkillMovementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovementType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillMovementTypes");
                });

            modelBuilder.Entity("FEHub.Entity.Models.SkillWeaponEffectiveness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DamageType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovementType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Weapon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeaponEffectivenessType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillWeaponEffectivenesses");
                });

            modelBuilder.Entity("FEHub.Entity.Models.SkillWeaponType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Weapon")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillWeaponTypes");
                });

            modelBuilder.Entity("FEHub.Entity.Models.VoiceActor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("NameKanji")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("VoiceActors");
                });

            modelBuilder.Entity("FEHub.Entity.Models.Hero", b =>
                {
                    b.HasOne("FEHub.Entity.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FEHub.Entity.Models.HeroSkill", b =>
                {
                    b.HasOne("FEHub.Entity.Models.Hero", null)
                        .WithMany("HeroSkills")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEHub.Entity.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FEHub.Entity.Models.HeroVoiceActor", b =>
                {
                    b.HasOne("FEHub.Entity.Models.Hero", null)
                        .WithMany("HeroVoiceActors")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEHub.Entity.Models.VoiceActor", "VoiceActor")
                        .WithMany()
                        .HasForeignKey("VoiceActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FEHub.Entity.Models.SkillMovementType", b =>
                {
                    b.HasOne("FEHub.Entity.Models.Skill", null)
                        .WithMany("SkillMovementTypes")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FEHub.Entity.Models.SkillWeaponEffectiveness", b =>
                {
                    b.HasOne("FEHub.Entity.Models.Skill", null)
                        .WithMany("SkillWeaponEffectivenesses")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FEHub.Entity.Models.SkillWeaponType", b =>
                {
                    b.HasOne("FEHub.Entity.Models.Skill", null)
                        .WithMany("SkillWeaponTypes")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
